/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Toggle, ToggleInterface } from "../../contracts/Toggle";

const _abi = [
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506101708061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320965255146100465780633fa4f2451461006457806340a3d24614610082575b600080fd5b61004e6100a0565b60405161005b919061011f565b60405180910390f35b61006c6100b6565b604051610079919061011f565b60405180910390f35b61008a6100c7565b604051610097919061011f565b60405180910390f35b60008060009054906101000a900460ff16905090565b60008054906101000a900460ff1681565b60008060009054906101000a900460ff16156000806101000a81548160ff02191690831515021790555060008054906101000a900460ff16905090565b60008115159050919050565b61011981610104565b82525050565b60006020820190506101346000830184610110565b9291505056fea2646970667358221220a4a33040b26b71afba5ec0ca51d3dc8f89283279da7244c048c2dd8b2e663c4c64736f6c63430008110033";

type ToggleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToggleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Toggle__factory extends ContractFactory {
  constructor(...args: ToggleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Toggle> {
    return super.deploy(overrides || {}) as Promise<Toggle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Toggle {
    return super.attach(address) as Toggle;
  }
  override connect(signer: Signer): Toggle__factory {
    return super.connect(signer) as Toggle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToggleInterface {
    return new utils.Interface(_abi) as ToggleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Toggle {
    return new Contract(address, _abi, signerOrProvider) as Toggle;
  }
}
