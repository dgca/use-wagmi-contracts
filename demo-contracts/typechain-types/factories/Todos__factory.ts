/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Todos, TodosInterface } from "../Todos";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTodos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Todos.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "todos",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "toggleCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610ed6806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063455f50241461005c57806361b8ce8c14610078578063b6a46b3b14610096578063bc8bc2b4146100b2578063c33926cb146100e5575b600080fd5b610076600480360381019061007191906105e5565b610103565b005b610080610229565b60405161008d9190610621565b60405180910390f35b6100b060048036038101906100ab9190610782565b61022f565b005b6100cc60048036038101906100c791906105e5565b61033a565b6040516100dc94939291906108a6565b60405180910390f35b6100ed61042f565b6040516100fa9190610a8e565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166000828154811061012e5761012d610ab0565b5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad90610b2b565b60405180910390fd5b600081815481106101ca576101c9610ab0565b5b906000526020600020906003020160020160009054906101000a900460ff1615600082815481106101fe576101fd610ab0565b5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b60015481565b6000604051806080016040528060015481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816102b59190610d57565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001600081548092919061033290610e58565b919050555050565b6000818154811061034a57600080fd5b906000526020600020906003020160009150905080600001549080600101805461037390610b7a565b80601f016020809104026020016040519081016040528092919081815260200182805461039f90610b7a565b80156103ec5780601f106103c1576101008083540402835291602001916103ec565b820191906000526020600020905b8154815290600101906020018083116103cf57829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561059257838290600052602060002090600302016040518060800160405290816000820154815260200160018201805461049090610b7a565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90610b7a565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610453565b50505050905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105c2816105af565b81146105cd57600080fd5b50565b6000813590506105df816105b9565b92915050565b6000602082840312156105fb576105fa6105a5565b5b6000610609848285016105d0565b91505092915050565b61061b816105af565b82525050565b60006020820190506106366000830184610612565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61068f82610646565b810181811067ffffffffffffffff821117156106ae576106ad610657565b5b80604052505050565b60006106c161059b565b90506106cd8282610686565b919050565b600067ffffffffffffffff8211156106ed576106ec610657565b5b6106f682610646565b9050602081019050919050565b82818337600083830152505050565b6000610725610720846106d2565b6106b7565b90508281526020810184848401111561074157610740610641565b5b61074c848285610703565b509392505050565b600082601f8301126107695761076861063c565b5b8135610779848260208601610712565b91505092915050565b600060208284031215610798576107976105a5565b5b600082013567ffffffffffffffff8111156107b6576107b56105aa565b5b6107c284828501610754565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108055780820151818401526020810190506107ea565b60008484015250505050565b600061081c826107cb565b61082681856107d6565b93506108368185602086016107e7565b61083f81610646565b840191505092915050565b60008115159050919050565b61085f8161084a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089082610865565b9050919050565b6108a081610885565b82525050565b60006080820190506108bb6000830187610612565b81810360208301526108cd8186610811565b90506108dc6040830185610856565b6108e96060830184610897565b95945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610927816105af565b82525050565b600082825260208201905092915050565b6000610949826107cb565b610953818561092d565b93506109638185602086016107e7565b61096c81610646565b840191505092915050565b6109808161084a565b82525050565b61098f81610885565b82525050565b60006080830160008301516109ad600086018261091e565b50602083015184820360208601526109c5828261093e565b91505060408301516109da6040860182610977565b5060608301516109ed6060860182610986565b508091505092915050565b6000610a048383610995565b905092915050565b6000602082019050919050565b6000610a24826108f2565b610a2e81856108fd565b935083602082028501610a408561090e565b8060005b85811015610a7c5784840389528151610a5d85826109f8565b9450610a6883610a0c565b925060208a01995050600181019050610a44565b50829750879550505050505092915050565b60006020820190508181036000830152610aa88184610a19565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420746865206f776e6572206f66207468697320746f646f000000000000600082015250565b6000610b15601a836107d6565b9150610b2082610adf565b602082019050919050565b60006020820190508181036000830152610b4481610b08565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b9257607f821691505b602082108103610ba557610ba4610b4b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c0d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bd0565b610c178683610bd0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c54610c4f610c4a846105af565b610c2f565b6105af565b9050919050565b6000819050919050565b610c6e83610c39565b610c82610c7a82610c5b565b848454610bdd565b825550505050565b600090565b610c97610c8a565b610ca2818484610c65565b505050565b5b81811015610cc657610cbb600082610c8f565b600181019050610ca8565b5050565b601f821115610d0b57610cdc81610bab565b610ce584610bc0565b81016020851015610cf4578190505b610d08610d0085610bc0565b830182610ca7565b50505b505050565b600082821c905092915050565b6000610d2e60001984600802610d10565b1980831691505092915050565b6000610d478383610d1d565b9150826002028217905092915050565b610d60826107cb565b67ffffffffffffffff811115610d7957610d78610657565b5b610d838254610b7a565b610d8e828285610cca565b600060209050601f831160018114610dc15760008415610daf578287015190505b610db98582610d3b565b865550610e21565b601f198416610dcf86610bab565b60005b82811015610df757848901518255600182019150602085019450602081019050610dd2565b86831015610e145784890151610e10601f891682610d1d565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e63826105af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e9557610e94610e29565b5b60018201905091905056fea2646970667358221220e23ce2b66a0a6e4bff303b50b7d91e5f3a75218be7cb46e4965111bfc308f94264736f6c63430008110033";

type TodosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Todos__factory extends ContractFactory {
  constructor(...args: TodosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Todos> {
    return super.deploy(overrides || {}) as Promise<Todos>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Todos {
    return super.attach(address) as Todos;
  }
  override connect(signer: Signer): Todos__factory {
    return super.connect(signer) as Todos__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodosInterface {
    return new utils.Interface(_abi) as TodosInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Todos {
    return new Contract(address, _abi, signerOrProvider) as Todos;
  }
}
